SET DATABASE UNIQUE NAME HSQLDB4D0C081406
SET DATABASE GC 0
SET DATABASE DEFAULT RESULT MEMORY ROWS 0
SET DATABASE EVENT LOG LEVEL 0
SET DATABASE SQL NAMES FALSE
SET DATABASE SQL REFERENCES FALSE
SET DATABASE SQL SIZE TRUE
SET DATABASE SQL TYPES FALSE
SET DATABASE SQL TDC DELETE TRUE
SET DATABASE SQL TDC UPDATE TRUE
SET DATABASE SQL TRANSLATE TTI TYPES TRUE
SET DATABASE SQL CONCAT NULLS TRUE
SET DATABASE SQL UNIQUE NULLS TRUE
SET DATABASE SQL CONVERT TRUNCATE TRUE
SET DATABASE SQL AVG SCALE 0
SET DATABASE SQL DOUBLE NAN TRUE
SET DATABASE TRANSACTION CONTROL LOCKS
SET DATABASE DEFAULT ISOLATION LEVEL READ COMMITTED
SET DATABASE TRANSACTION ROLLBACK ON CONFLICT TRUE
SET DATABASE TEXT TABLE DEFAULTS ''
SET FILES WRITE DELAY 0
SET FILES BACKUP INCREMENT TRUE
SET FILES CACHE SIZE 10000
SET FILES CACHE ROWS 50000
SET FILES SCALE 32
SET FILES LOB SCALE 32
SET FILES DEFRAG 0
SET FILES NIO TRUE
SET FILES NIO SIZE 256
SET FILES LOG TRUE
SET FILES LOG SIZE 50
CREATE USER SA PASSWORD DIGEST 'd41d8cd98f00b204e9800998ecf8427e'
ALTER USER SA SET LOCAL TRUE
CREATE SCHEMA PUBLIC AUTHORIZATION DBA
CREATE FUNCTION PUBLIC.SUBSTR_COUNT(IN HAYSTACK VARCHAR(255),IN NEEDLE VARCHAR(255)) RETURNS INTEGER SPECIFIC SUBSTR_COUNT_10282 LANGUAGE SQL NOT DETERMINISTIC CONTAINS SQL CALLED ON NULL INPUT BEGIN ATOMIC DECLARE STRCOUNT INTEGER;DECLARE LASTINDEX INTEGER;SET STRCOUNT=0;SET LASTINDEX=1;WHILE LASTINDEX<>0 DO SET LASTINDEX=LOCATE(NEEDLE,HAYSTACK,LASTINDEX);IF LASTINDEX<>0 THEN SET STRCOUNT=STRCOUNT+1;SET LASTINDEX=LASTINDEX+LENGTH(NEEDLE);END IF;END WHILE;RETURN STRCOUNT;END
SET SCHEMA PUBLIC
CREATE CACHED TABLE PUBLIC.DATABASEVERSION(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,STATUS VARCHAR(45) NOT NULL,LOCALTIME TIMESTAMP NOT NULL,CLIENT VARCHAR(45) NOT NULL,VECTORCLOCK_SERIALIZED VARCHAR(1024) NOT NULL,UNIQUE(VECTORCLOCK_SERIALIZED))
ALTER TABLE PUBLIC.DATABASEVERSION ALTER COLUMN ID RESTART WITH 2
CREATE INDEX IDX_DATABASEVERSION_STATUS ON PUBLIC.DATABASEVERSION(STATUS)
CREATE INDEX IDX_DATABASEVERSION_VECTORCLOCK_SERIALIZED ON PUBLIC.DATABASEVERSION(VECTORCLOCK_SERIALIZED)
CREATE CACHED TABLE PUBLIC.CHUNK(CHECKSUM VARCHAR(40) NOT NULL PRIMARY KEY,DATABASEVERSION_ID INTEGER NOT NULL,SIZE BIGINT NOT NULL,FOREIGN KEY(DATABASEVERSION_ID) REFERENCES PUBLIC.DATABASEVERSION(ID))
CREATE CACHED TABLE PUBLIC.DATABASEVERSION_VECTORCLOCK(DATABASEVERSION_ID INTEGER NOT NULL,CLIENT VARCHAR(45) NOT NULL,LOGICALTIME INTEGER NOT NULL,PRIMARY KEY(DATABASEVERSION_ID,CLIENT),FOREIGN KEY(DATABASEVERSION_ID) REFERENCES PUBLIC.DATABASEVERSION(ID))
CREATE CACHED TABLE PUBLIC.FILECONTENT(CHECKSUM VARCHAR(40) NOT NULL PRIMARY KEY,DATABASEVERSION_ID INTEGER NOT NULL,SIZE BIGINT NOT NULL,FOREIGN KEY(DATABASEVERSION_ID) REFERENCES PUBLIC.DATABASEVERSION(ID))
CREATE CACHED TABLE PUBLIC.FILECONTENT_CHUNK(FILECONTENT_CHECKSUM VARCHAR(40) NOT NULL,CHUNK_CHECKSUM VARCHAR(40) NOT NULL,NUM INTEGER NOT NULL,PRIMARY KEY(FILECONTENT_CHECKSUM,CHUNK_CHECKSUM,NUM),FOREIGN KEY(FILECONTENT_CHECKSUM) REFERENCES PUBLIC.FILECONTENT(CHECKSUM),FOREIGN KEY(CHUNK_CHECKSUM) REFERENCES PUBLIC.CHUNK(CHECKSUM))
CREATE CACHED TABLE PUBLIC.FILEHISTORY(ID VARCHAR(40) NOT NULL,DATABASEVERSION_ID INTEGER NOT NULL,PRIMARY KEY(ID,DATABASEVERSION_ID),FOREIGN KEY(DATABASEVERSION_ID) REFERENCES PUBLIC.DATABASEVERSION(ID))
CREATE CACHED TABLE PUBLIC.FILEVERSION(FILEHISTORY_ID VARCHAR(40) NOT NULL,VERSION INTEGER NOT NULL,DATABASEVERSION_ID INTEGER NOT NULL,PATH VARCHAR(1024) NOT NULL,TYPE VARCHAR(45) NOT NULL,STATUS VARCHAR(45) NOT NULL,SIZE BIGINT NOT NULL,LASTMODIFIED TIMESTAMP NOT NULL,LINKTARGET VARCHAR(1024),FILECONTENT_CHECKSUM VARCHAR(40) DEFAULT NULL,UPDATED TIMESTAMP NOT NULL,POSIXPERMS VARCHAR(45) DEFAULT NULL,DOSATTRS VARCHAR(45) DEFAULT NULL,PRIMARY KEY(FILEHISTORY_ID,VERSION,DATABASEVERSION_ID),FOREIGN KEY(FILEHISTORY_ID,DATABASEVERSION_ID) REFERENCES PUBLIC.FILEHISTORY(ID,DATABASEVERSION_ID),FOREIGN KEY(FILECONTENT_CHECKSUM) REFERENCES PUBLIC.FILECONTENT(CHECKSUM))
CREATE INDEX IDX_FILEVERSION_PATH ON PUBLIC.FILEVERSION(PATH)
CREATE INDEX IDX_FILEVERSION_STATUS ON PUBLIC.FILEVERSION(STATUS)
CREATE INDEX IDX_FILEVERSION_FILECONTENT_CHECKSUM ON PUBLIC.FILEVERSION(FILECONTENT_CHECKSUM)
CREATE CACHED TABLE PUBLIC.FILEVERSION_PURGE(FILEHISTORY_ID VARCHAR(40) NOT NULL,FILEVERSION_MAXPURGEVERSION INTEGER NOT NULL,DATABASEVERSION_ID INTEGER NOT NULL,PRIMARY KEY(FILEHISTORY_ID,FILEVERSION_MAXPURGEVERSION,DATABASEVERSION_ID))
CREATE CACHED TABLE PUBLIC.MULTICHUNK(ID VARCHAR(40) NOT NULL PRIMARY KEY,DATABASEVERSION_ID INTEGER NOT NULL,SIZE BIGINT NOT NULL,FOREIGN KEY(DATABASEVERSION_ID) REFERENCES PUBLIC.DATABASEVERSION(ID))
CREATE CACHED TABLE PUBLIC.MULTICHUNK_CHUNK(MULTICHUNK_ID VARCHAR(40) NOT NULL,CHUNK_CHECKSUM VARCHAR(40) NOT NULL,PRIMARY KEY(MULTICHUNK_ID,CHUNK_CHECKSUM),FOREIGN KEY(MULTICHUNK_ID) REFERENCES PUBLIC.MULTICHUNK(ID),FOREIGN KEY(CHUNK_CHECKSUM) REFERENCES PUBLIC.CHUNK(CHECKSUM))
CREATE CACHED TABLE PUBLIC.MULTICHUNK_MUDDY(ID VARCHAR(40) NOT NULL PRIMARY KEY,MACHINE_NAME VARCHAR(255) NOT NULL,MACHINE_VERSION INTEGER NOT NULL)
CREATE CACHED TABLE PUBLIC.KNOWN_DATABASES(ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,CLIENT VARCHAR(45) NOT NULL,FILENUMBER INTEGER NOT NULL,UNIQUE(CLIENT,FILENUMBER))
ALTER TABLE PUBLIC.KNOWN_DATABASES ALTER COLUMN ID RESTART WITH 3
CREATE CACHED TABLE PUBLIC.GENERAL_SETTINGS(KEY VARCHAR(255) NOT NULL PRIMARY KEY,VALUE VARCHAR(255) NOT NULL)
CREATE VIEW PUBLIC.DATABASEVERSION_MASTER (ID,STATUS,LOCALTIME,CLIENT,VECTORCLOCK_SERIALIZED,CLIENT_VERSION) AS SELECT DBV.ID,DBV.STATUS,DBV.LOCALTIME,DBV.CLIENT,DBV.VECTORCLOCK_SERIALIZED,VC.LOGICALTIME AS CLIENT_VERSION FROM PUBLIC.DATABASEVERSION DBV JOIN PUBLIC.DATABASEVERSION_VECTORCLOCK VC ON DBV.ID=VC.DATABASEVERSION_ID AND DBV.CLIENT=VC.CLIENT WHERE DBV.STATUS='MASTER'
CREATE VIEW PUBLIC.FILEVERSION_MASTER (FILEHISTORY_ID,VERSION,DATABASEVERSION_ID,PATH,TYPE,STATUS,SIZE,LASTMODIFIED,LINKTARGET,FILECONTENT_CHECKSUM,UPDATED,POSIXPERMS,DOSATTRS) AS SELECT FV0.FILEHISTORY_ID,FV0.VERSION,FV0.DATABASEVERSION_ID,FV0.PATH,FV0.TYPE,FV0.STATUS,FV0.SIZE,FV0.LASTMODIFIED,FV0.LINKTARGET,FV0.FILECONTENT_CHECKSUM,FV0.UPDATED,FV0.POSIXPERMS,FV0.DOSATTRS FROM PUBLIC.FILEVERSION FV0 JOIN PUBLIC.DATABASEVERSION DBV ON FV0.DATABASEVERSION_ID=DBV.ID AND DBV.STATUS='MASTER'
CREATE VIEW PUBLIC.FILEVERSION_MASTER_MAXVERSION (FILEHISTORY_ID,VERSION) AS SELECT DISTINCT FILEHISTORY_ID,MAX(VERSION)VERSION FROM PUBLIC.FILEVERSION_MASTER GROUP BY FILEHISTORY_ID
CREATE VIEW PUBLIC.FILEVERSION_MASTER_LAST (FILEHISTORY_ID,VERSION,DATABASEVERSION_ID,PATH,TYPE,STATUS,SIZE,LASTMODIFIED,LINKTARGET,FILECONTENT_CHECKSUM,UPDATED,POSIXPERMS,DOSATTRS) AS SELECT FV.FILEHISTORY_ID,FV.VERSION,FV.DATABASEVERSION_ID,FV.PATH,FV.TYPE,FV.STATUS,FV.SIZE,FV.LASTMODIFIED,FV.LINKTARGET,FV.FILECONTENT_CHECKSUM,FV.UPDATED,FV.POSIXPERMS,FV.DOSATTRS FROM PUBLIC.FILEVERSION_MASTER_MAXVERSION FVMAX JOIN PUBLIC.FILEVERSION_MASTER FV ON FVMAX.FILEHISTORY_ID=FV.FILEHISTORY_ID AND FVMAX.VERSION=FV.VERSION WHERE FV.STATUS<>'DELETED'
CREATE VIEW PUBLIC.FILEHISTORY_FULL (DATABASEVERSION_STATUS,DATABASEVERSION_LOCALTIME,DATABASEVERSION_CLIENT,DATABASEVERSION_VECTORCLOCK_SERIALIZED,ID,DATABASEVERSION_ID) AS SELECT DBV.STATUS AS DATABASEVERSION_STATUS,DBV.LOCALTIME AS DATABASEVERSION_LOCALTIME,DBV.CLIENT AS DATABASEVERSION_CLIENT,DBV.VECTORCLOCK_SERIALIZED AS DATABASEVERSION_VECTORCLOCK_SERIALIZED,FH.ID,FH.DATABASEVERSION_ID FROM PUBLIC.DATABASEVERSION DBV JOIN PUBLIC.FILEHISTORY FH ON DBV.ID=FH.DATABASEVERSION_ID
CREATE VIEW PUBLIC.FILEVERSION_FULL (DATABASEVERSION_STATUS,DATABASEVERSION_LOCALTIME,DATABASEVERSION_CLIENT,DATABASEVERSION_VECTORCLOCK_SERIALIZED,FILEHISTORY_ID,VERSION,DATABASEVERSION_ID,PATH,TYPE,STATUS,SIZE,LASTMODIFIED,LINKTARGET,FILECONTENT_CHECKSUM,UPDATED,POSIXPERMS,DOSATTRS) AS SELECT FHF.DATABASEVERSION_STATUS,FHF.DATABASEVERSION_LOCALTIME,FHF.DATABASEVERSION_CLIENT,FHF.DATABASEVERSION_VECTORCLOCK_SERIALIZED,FV.FILEHISTORY_ID,FV.VERSION,FV.DATABASEVERSION_ID,FV.PATH,FV.TYPE,FV.STATUS,FV.SIZE,FV.LASTMODIFIED,FV.LINKTARGET,FV.FILECONTENT_CHECKSUM,FV.UPDATED,FV.POSIXPERMS,FV.DOSATTRS FROM PUBLIC.FILEHISTORY_FULL FHF JOIN PUBLIC.FILEVERSION FV ON FHF.ID=FV.FILEHISTORY_ID AND FHF.DATABASEVERSION_ID=FV.DATABASEVERSION_ID
ALTER SEQUENCE SYSTEM_LOBS.LOB_ID RESTART WITH 1
SET DATABASE DEFAULT INITIAL SCHEMA PUBLIC
SET TABLE PUBLIC.DATABASEVERSION INDEX '4 4 4 4 0 0 0 0 2'
SET TABLE PUBLIC.CHUNK INDEX '21 54 0 0 43'
SET TABLE PUBLIC.DATABASEVERSION_VECTORCLOCK INDEX '9 9 0 0 2'
SET TABLE PUBLIC.FILECONTENT INDEX '383 471 0 0 43'
SET TABLE PUBLIC.FILECONTENT_CHUNK INDEX '386 386 386 0 0 0 43'
SET TABLE PUBLIC.FILEHISTORY INDEX '729 1092 0 0 62'
SET TABLE PUBLIC.FILEVERSION INDEX '732 732 745 719 1095 745 0 0 0 0 0 0 62'
SET TABLE PUBLIC.MULTICHUNK INDEX '141 141 0 0 2'
SET TABLE PUBLIC.MULTICHUNK_CHUNK INDEX '154 219 154 0 0 0 43'
SET TABLE PUBLIC.KNOWN_DATABASES INDEX '1528 1528 0 0 1'
SET TABLE PUBLIC.GENERAL_SETTINGS INDEX '1531 0 2'
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.SQL_IDENTIFIER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.YES_OR_NO TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.TIME_STAMP TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CARDINAL_NUMBER TO PUBLIC
GRANT USAGE ON DOMAIN INFORMATION_SCHEMA.CHARACTER_DATA TO PUBLIC
GRANT DBA TO SA
SET SCHEMA SYSTEM_LOBS
INSERT INTO BLOCKS VALUES(0,2147483647,0)
